version: '3'

services:
  traefik:
    image: traefik:v2.10
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.toml:/etc/traefik/traefik.toml
    # restart: on-failure
    depends_on:
      - mongo
      - deck
      - repository
      - client

  mongo:
    image: mongo:5.0
    # restart: on-failure
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongodata:/data/db

  repository:
    build:
      context: ./repository
      dockerfile: Dockerfile.dev
    volumes:
      - ./repository/src:/app/src
    labels:
      - traefik.enable=true
      - traefik.http.routers.repository.rule=PathPrefix(`/api/repository`)
      - traefik.http.routers.repository.entrypoints=web
    # restart: on-failure
    depends_on:
      - mongo

  deck:
    build:
      context: ./deck
      dockerfile: Dockerfile.dev
    volumes:
      - ./deck/src:/app/src
    labels:
      - traefik.enable=true
      - traefik.http.routers.deck.rule=PathPrefix(`/api/deck`)
      - traefik.http.routers.deck.entrypoints=web
    # restart: on-failure
    depends_on:
      - mongo

  payment:
    build:
      context: ./payment
      dockerfile: Dockerfile.dev
    volumes:
      - ./payment/src:/app/src
    labels:
      - traefik.enable=true
      - traefik.http.routers.payment.rule=PathPrefix(`/api/payment`)
      - traefik.http.routers.payment.entrypoints=web
    # restart: on-failure
    depends_on:
      - mongo

  stripe-cli:
    image: stripe/stripe-cli
    command: listen --forward-to localhost/api/payment/webhook -e invoice.paid,invoice.payment_failed --api-key sk_test_51Og0zkHuYFk3KBjSVTGTFOPtzRZCJf7HwbfBSIfVUGWe3lrV4aSEi22GjIRaYIdzJW4wl7m6wS0nMsZyTOEJtE5000JK57p8yh
    stdin_open: true
    tty: true
    depends_on:
      - payment
    network_mode: "host"

  ai:
    build:
      context: ./ai
      dockerfile: Dockerfile.dev
    volumes:
      - ./ai/src:/app/src
    labels:
      - traefik.enable=true
      - traefik.http.routers.ai.rule=PathPrefix(`/api/ai`)
      - traefik.http.routers.ai.entrypoints=web
      - traefik.http.middlewares.ai-ratelimit.ratelimit.average=100
      - traefik.http.routers.ai.middlewares=ai-ratelimit
    # restart: on-failure
    depends_on:
      - mongo

  client:
    build:
      context: ./neo_client
      dockerfile: Dockerfile.dev
    volumes:
      - ./neo_client:/app
    labels:
      - traefik.enable=true
      - traefik.http.routers.client.rule=Host(`localhost`)
      - traefik.http.routers.client.entrypoints=web
    # restart: on-failure
    depends_on:
      - repository
      - deck

  messaging:
    container_name: messaging
    build: ./messaging
    labels:
      - traefik.enable=true
      - traefik.http.routers.messaging.rule=PathPrefix(`/api/messaging`)
      - traefik.http.routers.messaging.entrypoints=web
      - traefik.http.middlewares.messaging-ratelimit.ratelimit.average=100
      - traefik.http.routers.messaging.middlewares=messaging-ratelimit
    volumes:
      - ./messaging:/app

  activity:
    build:
      context: ./activity
      dockerfile: Dockerfile.dev
    volumes:
      - ./activity/src:/app/src
    labels:
      - traefik.enable=true
      - traefik.http.routers.activity.rule=PathPrefix(`/api/activity`)
      - traefik.http.routers.activity.entrypoints=web
    # restart: on-failure
    depends_on:
      - mongo

volumes:
  mongodata:
